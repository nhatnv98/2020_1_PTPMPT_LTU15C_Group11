/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package server;

import bean.Account;
import bean.Transaction;

import javax.swing.*;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.rmi.RemoteException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;
import java.util.Random;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * @author HK
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private static final String digits = "0123456789"; // 0-9
    private DefaultTableModel tb;
    private Locale locale = new Locale("vi", "VN");
    private NumberFormat n = NumberFormat.getCurrencyInstance(locale);

    public Main() {
        initComponents();
        RMIServer.initWithoutKey();
        this.setLocationRelativeTo(null);
        Query query = new Query();
        ArrayList<Transaction> transactionList = query.getTransactionHistory();
        DefaultTableModel model = (DefaultTableModel) TransactionTableView.getModel();
        for (int i = 0; i < transactionList.size(); i++) {
            Object[] row = {transactionList.get(i).getCard_no1(), transactionList.get(i).getCard_no2(), transactionList.get(i).getType(), n.format(transactionList.get(i).getMoney_no()), transactionList.get(i).getCode(), transactionList.get(i).getTran_date()};
            model.addRow(row);
        }

        MainView.addChangeListener(new ChangeListener() {

            @Override
            public void stateChanged(ChangeEvent e) {

                if (MainView.getSelectedIndex() == 0) {
                    model.getDataVector().removeAllElements();
                    ArrayList<Transaction> transactionList = query.getTransactionHistory();
                    for (int i = 0; i < transactionList.size(); i++) {
                        Object[] row = {transactionList.get(i).getCard_no1(), transactionList.get(i).getCard_no2(), transactionList.get(i).getType(), n.format(transactionList.get(i).getMoney_no()), transactionList.get(i).getCode(), transactionList.get(i).getTran_date()};
                        model.addRow(row);
                    }
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        MainView = new javax.swing.JTabbedPane();
        TransactionTabView = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TransactionTableView = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        numacc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        addressTextView = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        phoneTextView = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        createAccountButtonView = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        fullNameTextView = new javax.swing.JTextField();
        pintf = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cardNo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        addToAccount = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        MainView.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                MainViewComponentShown(evt);
            }
        });

        TransactionTableView.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{

                },
                new String[]{
                        "Tài khoản nguồn", "Tài khoản nhận tiền", "Loại", "Số tiền", "Mã", "Thời gian"
                }
        ) {
            Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean[]{
                    false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jScrollPane1.setViewportView(TransactionTableView);

        javax.swing.GroupLayout TransactionTabViewLayout = new javax.swing.GroupLayout(TransactionTabView);
        TransactionTabView.setLayout(TransactionTabViewLayout);
        TransactionTabViewLayout.setHorizontalGroup(
                TransactionTabViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 774, Short.MAX_VALUE)
        );
        TransactionTabViewLayout.setVerticalGroup(
                TransactionTabViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
        );

        MainView.addTab("Giám sát giao dịch", TransactionTabView);

        numacc.setEditable(false);

        jLabel1.setText("Họ và tên");

        jLabel2.setText("Địa chỉ");

        jLabel3.setText("Điện thoại");

        jLabel4.setText("Mã PIN");

        createAccountButtonView.setText("Tạo tài khoản");
        createAccountButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountButtonViewActionPerformed(evt);
            }
        });

        jLabel9.setText("Số tài khoản");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Được liên kết với:");

        pintf.setEditable(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel2)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel9))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(createAccountButtonView, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                                                        .addComponent(numacc)
                                                        .addComponent(addressTextView)
                                                        .addComponent(phoneTextView)
                                                        .addComponent(fullNameTextView)
                                                        .addComponent(pintf)))
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addGap(20, 20, 20)
                                                .addComponent(jLabel10)))
                                .addContainerGap(310, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(fullNameTextView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(addressTextView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(phoneTextView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel9)
                                        .addComponent(numacc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(pintf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(createAccountButtonView)
                                .addGap(29, 29, 29))
        );

        MainView.addTab("Tạo tài khoản mới", jPanel8);

        jLabel7.setText("Số tài khoản");

        jLabel8.setText("Số tiền");

        amount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountActionPerformed(evt);
            }
        });

        addToAccount.setText("Nạp tiền vào tài khoản");
        addToAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(addToAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                                        .addComponent(cardNo)
                                        .addComponent(amount, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE))
                                .addContainerGap(322, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(cardNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(addToAccount)
                                .addContainerGap(179, Short.MAX_VALUE))
        );

        MainView.addTab("Nạp tiền vào tài khoản", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(MainView)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(MainView, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MainViewComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_MainViewComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_MainViewComponentShown

    public Account getAccount(String cardNo) throws RemoteException, SQLException {
        if (isNumeric(cardNo)) {
            String sql = "select * from Account where card_no=?";
            PreparedStatement ps;
            ps = MyConnection.getConnection().prepareStatement(sql);
            ps.setString(1, cardNo);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                return new Account(rs.getString(2), rs.getString(3),
                        rs.getString(4), rs.getString(5), rs.getString(6), rs.getBigDecimal(7));
            }
        }
        return null;

    }

    private void addToAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToAccountActionPerformed
        PreparedStatement ps;
        ResultSet rs;
        if (!this.cardNo.getText().isEmpty() || !this.amount.getText().isEmpty()) {
            try {
                BigDecimal amount2 = new BigDecimal(this.amount.getText());
                Account account = getAccount(this.cardNo.getText());
                if (account != null) {
                    if (amount2.compareTo(new BigDecimal("50000")) == 0 || amount2.compareTo(new BigDecimal("50000")) == 1) {
                        if (amount2.remainder(new BigDecimal("5000")).equals(BigDecimal.ZERO)) {
                            BigDecimal balance2 = account.getBalance().add(amount2);
                            String sql2 = "update Account set balance =? where card_no =?";
                            PreparedStatement ps2;
                            ps = MyConnection.getConnection().prepareStatement(sql2);
                            ps.setBigDecimal(1, balance2);
                            ps.setString(2, this.cardNo.getText());
                            ps.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Nạp thành công" + this.amount.getText() + " cho số tài khoản" + this.cardNo.getText()
                                    , "Warning", JOptionPane.WARNING_MESSAGE);
                            this.cardNo.setText("");
                            this.amount.setText("");
                        } else {
                            JOptionPane.showMessageDialog(null, "Số tiền phải là bội của 5000", "Warning", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Nạp tối thiểu 50.000 VNĐ", "Warning", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Không tồn tại tài khoản", "Warning", JOptionPane.WARNING_MESSAGE);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Query.class.getName()).log(Level.SEVERE, null, ex);
            } catch (RemoteException ex) {
                Logger.getLogger(BannImpl.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Không được để trống số tài khoản hoặc số tiền", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_addToAccountActionPerformed

    private void amountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountActionPerformed

    private void createAccountButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountButtonViewActionPerformed
        // TODO add your handling code here:
        String fullName = fullNameTextView.getText();
        String address = addressTextView.getText();
        String phone = phoneTextView.getText();
        // System.out.println(pin);

        if (fullName.length() > 0 || address.length() > 0) {
            if (isNumericPhone(phone)) {
                Query query = new Query();
                String cardNo = String.format("%040d", new BigInteger(UUID.randomUUID().toString().replace("-", ""), 16)).substring(0, 10);
                while (query.check(cardNo)) {
                    cardNo = String.format("%040d", new BigInteger(UUID.randomUUID().toString().replace("-", ""), 16)).substring(0, 10);
                }
                String pin = genPin(6);
                query.createAccount(fullName, address, phone, cardNo, pin);
                numacc.setText(cardNo);
                pintf.setText(pin);
                JOptionPane.showMessageDialog(null, "Tạo thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Số điện thoại phải là 10 số!");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng điền đủ thông tin");
        }
    }//GEN-LAST:event_createAccountButtonViewActionPerformed

    public static boolean isNumeric(String cardNo, String pin) {
        if (cardNo.matches("-?\\d+(\\.\\d+)?")) {
            if (pin.length() == 6) {
                return pin.matches("-?\\d+(\\.\\d+)?");
            } else {
                return false;
            }

        }
        return false;
    }
    //check input is numberic.

    public static boolean isNumeric(String strNum) {
        if (strNum.length() > 13) {
            return false;
        } else {
            return strNum.matches("-?\\d+(\\.\\d+)?");
        }
    }

    public static boolean isNumericPhone(String strNum) {
        if (strNum.length() == 10) {
            return strNum.matches("-?\\d+(\\.\\d+)?");
        } else {
            return false;
        }
    }

    private String genPin(int length) {
        StringBuilder sb = new StringBuilder();
        Random generator = new Random();
        for (int i = 0; i < length; i++) {
            int number = generator.nextInt(10);
            char ch = digits.charAt(number);
            sb.append(ch);
        }
        return sb.toString();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Main.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Main.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Main.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Main.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane MainView;
    private javax.swing.JPanel TransactionTabView;
    private javax.swing.JTable TransactionTableView;
    private javax.swing.JButton addToAccount;
    private javax.swing.JTextField addressTextView;
    private javax.swing.JTextField amount;
    private javax.swing.JTextField cardNo;
    private javax.swing.JButton createAccountButtonView;
    private javax.swing.JTextField fullNameTextView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField numacc;
    private javax.swing.JTextField phoneTextView;
    private javax.swing.JTextField pintf;
    // End of variables declaration//GEN-END:variables
}
